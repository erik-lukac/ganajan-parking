#docker-compose.yml

services:
  db:
    image: postgres:latest
    container_name: db
    networks:
      - shared_network
    ports:
      - "5444:5432"  # Exposing PostgreSQL from container (port 5432) to Docker host (port 5444), accessible externally on VM
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # Use environment variable
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - DB_PORT=${DB_PORT}  # Add port environment variable if needed
    volumes:
      - db_data:/var/lib/postgresql/data  # Persist database data
      #- ./db-initialise.sh:/docker-entrypoint-initdb.d/db-initialise.sh # Mount the initialization script
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile.backend
    container_name: backend
    expose:
      - "5000"  # Exposing Flask app port to internal shared_network on Docker, specificaly for nxing proxy
    networks:
      - shared_network
    restart: always
    depends_on:
      - db
    volumes:
      - ./backend:/app/backend

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile.frontend
    container_name: frontend
    expose:
      - "5001"  # Exposing Flask app port to internal shared_network on Docker, specificaly for nxing proxy
    networks:
      - shared_network
    restart: always
    depends_on:
      - db
    volumes:
      - ./frontend:/app

  proxy:
    image: nginx:latest
    container_name: proxy
    ports:
      - "32211:32211"  # Exposing external port 32211 for webhook traffic (backend)
      - "32212:32212"  # Exposing external port 32212 for frontend traffic (frontend)
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro  # Mounting custom Nginx configuration
      - ./proxy/logs:/var/log/nginx  # Enabling logging
    networks:
      - shared_network
    restart: always
    depends_on:
      - backend
      - frontend

networks:
  shared_network:
    external: true

volumes:
  db_data: